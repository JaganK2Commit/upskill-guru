{"version":3,"sources":["components/LeftNav/LeftNav.style.js","theme.style.js","App.style.js","http-common.js","services/SkillService.js","components/AddSkill.js","components/Skill.js","components/SkillsList.js","components/LeftNav/LeftNav.js","App.js","serviceWorker.js","index.js"],"names":["px","pxToRem","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkerAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","neutralWhite","black","white","theme","loadTheme","defaultFontStyle","fontSize","lineHeight","fonts","small","color","medium","fontWeight","large","xLarge","layout","topNav","height","commandBar","leftNav","width","mainContainer","minHeight","mainContentContainer","topMargin","mergeStyleSets","position","left","paddingTop","Container","backgroundColor","horizontalAlign","axios","create","baseURL","headers","http","get","id","data","post","put","delete","title","AddSkill","initialSkillState","description","published","useState","skill","setSkill","submitted","setSubmitted","handleInputChange","event","target","name","value","className","onClick","htmlFor","type","required","onChange","SkillDataService","then","response","console","log","catch","e","Skill","props","currentSkill","setCurrentSkill","message","setMessage","useEffect","match","params","updatePublished","status","history","push","SkillsList","skills","setSkills","currentIndex","setCurrentIndex","searchTitle","setSearchTitle","retrieveSkills","placeholder","length","map","index","setActiveSkill","key","to","borderRight","overflowY","zIndex","transition","LeftNav","other","useHistory","location","useLocation","links","url","Nav","onRenderLink","item","selectedKey","pathParts","pathname","split","activeLink","find","link","getSelectedKey","styles","onLinkClick","external","preventDefault","groups","filter","l","trim","defaultProps","App","Stack","vertical","href","horizontal","exact","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.4e0c90c6.chunk.js","sourcesContent":["import { mergeStyleSets } from '@uifabric/merge-styles';\nimport theme, { layout } from '../../theme.style';\n\nexport const pxToRem = px => `${px * 0.0625}rem`;\n\nexport default mergeStyleSets({\n    width: pxToRem(layout.constants.leftNav.width),\n    backgroundColor: theme.palette.neutralWhite,\n    borderRight: '1px solid #eee',\n    overflowY: 'auto',\n    zIndex: 10,\n    position: 'fixed',\n    left: 0,\n    transition: '0.5s',\n});\n","import { loadTheme } from '@uifabric/styling';\n\nconst pxToRem = px => `${px * 0.0625}rem`;\n\n\nconst palette = {\n  themePrimary: '#781042',\n  themeLighterAlt: '#faf1f5',\n  themeLighter: '#e9c9d9',\n  themeLight: '#d69eba',\n  themeTertiary: '#ae537f',\n  themeSecondary: '#882052',\n  themeDarkerAlt: '#6c0e3b',\n  themeDark: '#5b0c32',\n  themeDarker: '#430925',\n  neutralLighterAlt: '#FAF9F8',\n  neutralLighter: '#F3F2F1',\n  neutralLight: '#EDEBE9',\n  neutralQuaternaryAlt: '#E1DFDD',\n  neutralQuaternary: '#D2D0CE',\n  neutralTertiaryAlt: '#C8C6C4',\n  neutralTertiary: '#A19F9D',\n  neutralSecondary: '#605E5C',\n  neutralPrimaryAlt: '#3B3A39',\n  neutralPrimary: '#323130',\n  neutralDark: '#201F1E',\n  neutralWhite: '#FFFFFF',\n  black: '#3a3836',\n  white: '#faf9f8',\n};\n\nconst theme = loadTheme({\n  palette,\n  defaultFontStyle: {\n    fontSize: pxToRem(16),\n    lineHeight: pxToRem(22),\n  },\n  fonts: {\n    small: {\n      fontSize: pxToRem(12),\n      lineHeight: pxToRem(16),\n      color: palette.neutralSecondary,\n    },\n    medium: {\n      fontSize: pxToRem(14),\n      lineHeight: pxToRem(20),\n      fontWeight: 600,\n    },\n    large: {\n      fontSize: pxToRem(16),\n      lineHeight: pxToRem(22),\n      fontWeight: 600,\n    },\n    xLarge: {\n      fontSize: pxToRem(22),\n      lineHeight: pxToRem(30),\n      fontWeight: 600,\n    },\n  },\n});\n\nexport default theme;\n\nexport const layout = {\n  constants: {\n    topNav: {\n      height: 48,\n    },\n    commandBar: {\n      height: 45,\n    },\n    leftNav: {\n      width: 228,\n    },\n    mainContainer: {\n      minHeight: 800,\n    },\n    mainContentContainer: {\n      minHeight: 800,\n      topMargin: 45\n    },\n  },\n};\n","import { mergeStyleSets } from '@uifabric/merge-styles';\nimport theme, { layout } from './theme.style';\n\n\nconst pxToRem = px => `${px * 0.0625}rem`;\n\n\nexport default mergeStyleSets({\n  mainContentContainer: {\n    position: 'relative',\n    left: pxToRem(layout.constants.leftNav.width),\n    width : '80%',\n    paddingTop: pxToRem(layout.constants.mainContentContainer.topMargin)\n  },\n  Container: {\n    backgroundColor: theme.palette.white,\n    position: 'relative',\n    horizontalAlign : 'center',\n    left: pxToRem(layout.constants.leftNav.width),\n    width : '80%',\n    minHeight : pxToRem(layout.constants.mainContainer.minHeight),\n  },\n});\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://cs411upskillguru.web.illinois.edu/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});\n","import http from \"../http-common\";\n\nconst getAll = () => {\n  return http.get(\"/skills\");\n};\n\nconst get = id => {\n  return http.get(`/skills/${id}`);\n};\n\nconst create = data => {\n  return http.post(\"/skills\", data);\n};\n\nconst update = (id, data) => {\n  return http.put(`/skills/${id}`, data);\n};\n\nconst remove = id => {\n  return http.delete(`/skills/${id}`);\n};\n\nconst removeAll = () => {\n  return http.delete(`/skills`);\n};\n\nconst findByTitle = title => {\n  return http.get(`/skills?title=${title}`);\n};\n\nexport default {\n  getAll,\n  get,\n  create,\n  update,\n  remove,\n  removeAll,\n  findByTitle\n};\n","import React, { useState } from \"react\";\nimport SkillDataService from \"../services/SkillService\";\n\nconst AddSkill = () => {\n  const initialSkillState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    published: false\n  };\n  const [skill, setSkill] = useState(initialSkillState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setSkill({ ...skill, [name]: value });\n  };\n\n  const saveSkill = () => {\n    var data = {\n      title: skill.title,\n      description: skill.description\n    };\n\n    SkillDataService.create(data)\n      .then(response => {\n        setSkill({\n          id: response.data.id,\n          title: response.data.title,\n          description: response.data.description,\n          published: response.data.published\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newSkill = () => {\n    setSkill(initialSkillState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"submit-form\">\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={newSkill}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              required\n              value={skill.title}\n              onChange={handleInputChange}\n              name=\"title\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"description\"\n              required\n              value={skill.description}\n              onChange={handleInputChange}\n              name=\"description\"\n            />\n          </div>\n\n          <button onClick={saveSkill} className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AddSkill;\n","import React, { useState, useEffect } from \"react\";\nimport SkillDataService from \"../services/SkillService\"\n\nconst Skill = props => {\n  const initialSkillState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    published: false\n  };\n  const [currentSkill, setCurrentSkill] = useState(initialSkillState);\n  const [message, setMessage] = useState(\"\");\n\n  const getSkill = id => {\n    SkillDataService.get(id)\n      .then(response => {\n        setCurrentSkill(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    getSkill(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentSkill({ ...currentSkill, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n      id: currentSkill.id,\n      title: currentSkill.title,\n      description: currentSkill.description,\n      published: status\n    };\n\n    SkillDataService.update(currentSkill.id, data)\n      .then(response => {\n        setCurrentSkill({ ...currentSkill, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateSkill = () => {\n    SkillDataService.update(currentSkill.id, currentSkill)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The skill was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const deleteSkill = () => {\n    SkillDataService.remove(currentSkill.id)\n      .then(response => {\n        console.log(response.data);\n        props.history.push(\"/skills\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div>\n      {currentSkill ? (\n        <div className=\"edit-form\">\n          <h4>Skill</h4>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                name=\"title\"\n                value={currentSkill.title}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                name=\"description\"\n                value={currentSkill.description}\n                onChange={handleInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>\n                <strong>Status:</strong>\n              </label>\n              {currentSkill.published ? \"Published\" : \"Pending\"}\n            </div>\n          </form>\n\n          {currentSkill.published ? (\n            <button\n              className=\"badge badge-primary mr-2\"\n              onClick={() => updatePublished(false)}\n            >\n              UnPublish\n            </button>\n          ) : (\n            <button\n              className=\"badge badge-primary mr-2\"\n              onClick={() => updatePublished(true)}\n            >\n              Publish\n            </button>\n          )}\n\n          <button className=\"badge badge-danger mr-2\" onClick={deleteSkill}>\n            Delete\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateSkill}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Skill...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Skill;\n","import React, { useState, useEffect } from \"react\";\nimport SkillDataService from \"../services/SkillService\";\nimport { Link } from \"react-router-dom\";\n\nconst SkillsList = () => {\n  const [skills, setSkills] = useState([]);\n  const [currentSkill, setCurrentSkill] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n\n  useEffect(() => {\n    retrieveSkills();\n  }, []);\n\n  const onChangeSearchTitle = e => {\n    const searchTitle = e.target.value;\n    setSearchTitle(searchTitle);\n  };\n\n  const retrieveSkills = () => {\n    SkillDataService.getAll()\n      .then(response => {\n        setSkills(response.data.skills);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveSkills();\n    setCurrentSkill(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveSkill = (skill, index) => {\n    setCurrentSkill(skill);\n    setCurrentIndex(index);\n  };\n\n  const removeAllSkills = () => {\n    SkillDataService.removeAll()\n      .then(response => {\n        console.log(response.data);\n        refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const findByTitle = () => {\n    SkillDataService.findByTitle(searchTitle)\n      .then(response => {\n        setSkills(response.data.skills);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div className=\"list row\">\n      <div className=\"col-md-8\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by title\"\n            value={searchTitle}\n            onChange={onChangeSearchTitle}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByTitle}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-6\">\n        <h4>Skills List</h4>\n\n        <ul className=\"list-group\">\n          {skills && skills.length > 0 &&\n            skills.map((skill, index) => (\n              <li\n                className={\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n                }\n                onClick={() => setActiveSkill(skill, index)}\n                key={index}\n              >\n                {skill.title}\n              </li>\n            ))}\n        </ul>\n\n        <button\n          className=\"m-3 btn btn-sm btn-danger\"\n          onClick={removeAllSkills}\n        >\n          Remove All\n        </button>\n        <Link to={\"/add\"} className=\"m-3 btn btn-sm btn-primary\">\n              Add\n            </Link>\n      </div>\n      <div className=\"col-md-6\">\n        {currentSkill ? (\n          <div>\n            <h4>Skill</h4>\n            <div>\n              <label>\n                <strong>Title:</strong>\n              </label>{\" \"}\n              {currentSkill.title}\n            </div>\n            <div>\n              <label>\n                <strong>Description:</strong>\n              </label>{\" \"}\n              {currentSkill.description}\n            </div>\n            <div>\n              <label>\n                <strong>Status:</strong>\n              </label>{\" \"}\n              {currentSkill.published ? \"Published\" : \"Pending\"}\n            </div>\n\n            <Link\n              to={\"/skills/\" + currentSkill.id}\n              className=\"badge badge-warning\"\n            >\n              Edit\n            </Link>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Skill...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SkillsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Nav } from 'office-ui-fabric-react/lib/Nav';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styles from './LeftNav.style';\n\nconst LeftNav = ({className: classNameProp, ...other }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const links = [\n    {\n      name: 'Home',\n      url: '/',\n      key: 'home',\n    },\n    {\n      name: 'Account',\n      url: '/account',\n      key: 'account',\n    },\n    {\n      name: 'Jobs',\n      url: '/jobs',\n      key: 'jobs',\n    },\n    {\n      name: 'Saved Search',\n      url: '/saved-search',\n      key: 'saved-search',\n    },\n    {\n      name: 'Logout',\n      url: '/logout',\n      key: 'logout',\n    },\n  ];\n\n  const handleLinkClick = (event, link) => {\n    if (!link.external) {\n      event.preventDefault();\n      history.push(link.url);\n    }\n  };\n\n  const getSelectedKey = () => {\n    const pathParts = location.pathname.split('/');\n    if (pathParts[1] === '') return 'home';\n\n    const activeLink = links.find(link => pathParts[1] === link.key);\n    return activeLink ? activeLink.key : null;\n  };\n\n  return (\n    <div >\n      <Nav\n        onRenderLink={item => (\n          <div className=\"ms-Nav-linkText\">\n            {item.name}\n          </div>\n        )}\n        selectedKey={getSelectedKey()}\n        className={styles}\n        onLinkClick={handleLinkClick}\n        groups={[\n          {\n            links: links.filter(l => l.url.trim() !== ''),\n          },\n        ]}\n        {...other}\n      />\n    </div>\n  );\n};\n\nLeftNav.propTypes = {\n  className: PropTypes.string,\n};\n\nLeftNav.defaultProps = {\n  className: '',\n};\n\nexport default LeftNav;\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Stack } from 'office-ui-fabric-react';\nimport \"./App.css\";\n\nimport styles from './App.style';\nimport AddSkill from \"./components/AddSkill\";\nimport Skill from \"./components/Skill\";\nimport SkillsList from \"./components/SkillsList\";\nimport LeftNav from \"./components/LeftNav/LeftNav\";\n\nfunction App() {\n  return (\n    <div>\n      <Stack vertical className={styles.Container}>\n        <Stack>\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/\" className=\"navbar-brand\">\n            UpSkill-Guru\n          </a>\n        </nav>\n        </Stack>\n        <Stack>\n          <Stack horizontal>\n            <Stack>\n                <LeftNav>\n                </LeftNav>\n            </Stack>\n\n            <Stack\n              className={styles.mainContentContainer}\n            >\n\n            <div>\n            <Switch>\n              <Route exact path={[\"/\", \"/skills\"]} component={SkillsList} />\n              <Route exact path=\"/add\" component={AddSkill} />\n              <Route path=\"/skills/:id\" component={Skill} />\n            </Switch>\n            </div>\n            </Stack>\n            </Stack>\n          </Stack>\n      </Stack>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}